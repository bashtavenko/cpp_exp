load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("@rules_foreign_cc//foreign_cc:repositories.bzl", "rules_foreign_cc_dependencies")
load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier")

buildifier(
    name = "buildifier",
)

# "-DWITH_FFMPEG=OFF" is for https://github.com/opencv/opencv/issues/22748
cmake(
    name = "opencv",
    cmake_options = [
        "-DBUILD_LIST=calib3d,core,features2d,highgui,imgcodecs,imgproc,videoio,ml",
        "-DWITH_FFMPEG=OFF",
    ],
    lib_source = "@opencv//:all",
    out_include_dir = "include/opencv4",
    out_shared_libs = [
        "libopencv_ml.so.4.6.0",
        "libopencv_calib3d.so.4.6.0",
        "libopencv_core.so.4.6.0",
        "libopencv_features2d.so.4.6.0",
        "libopencv_highgui.so.4.6.0",
        "libopencv_imgcodecs.so.4.6.0",
        "libopencv_imgproc.so.4.6.0",
        "libopencv_videoio.so.4.6.0",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "mat_test",
    srcs = ["mat_test.cc"],
    data = ["//testdata"],
    deps = [
        "//:opencv",
        "@bazel_tools//tools/cpp/runfiles",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_binary(
    name = "hello_main",
    srcs = ["hello_main.cc"],
    deps = [
        "//calibration:birdeye",
        "//calibration:intrinsic",
        "//convolution:filters",
        "//fft",
        "//histograms",
        "//keypoints",
        "//misc",
        "//ml:decision_trees",
        "//ml:kmeans",
        "//transformations",
        "@com_github_gflags_gflags//:gflags",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/strings",
    ],
)
